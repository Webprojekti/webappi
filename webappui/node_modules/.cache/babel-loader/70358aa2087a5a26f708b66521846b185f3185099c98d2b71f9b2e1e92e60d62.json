{"ast":null,"code":"var _jsxFileName = \"C:\\\\wepabbi\\\\webappi\\\\webappui\\\\src\\\\charts\\\\V9.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport { Bar, Line, Doughnut } from \"react-chartjs-2\";\nimport { parse } from 'papaparse';\nimport 'chartjs-adapter-luxon';\nimport { Chart as ChartJS } from \"chart.js/auto\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst urlv9 = 'http://localhost:8080/v9';\nexport default function V9() {\n  _s();\n  const [v9, setv9] = useState([]);\n  useEffect(() => {\n    axios.get(urlv9).then(response => {\n      console.log(response.data);\n      setv9(response.data);\n    }).catch(error => {\n      alert(error.response.error);\n    });\n  }, []);\n  const v9chart = {\n    labels: v9.map(d => d.name),\n    datasets: [{\n      label: 'V9',\n      backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)'],\n      borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)', 'rgba(255, 159, 64, 0.2)'],\n      borderWidth: 2,\n      data: v9.map(d => d.values),\n      parsing: {\n        yAxisKey: 'values'\n      },\n      spanGaps: false\n    }]\n  };\n  const options = {\n    type: 'line',\n    responsive: true,\n    plugins: {\n      legend: {\n        position: \"top\"\n      },\n      title: {\n        display: true,\n        text: \"V9\"\n      }\n    },\n    scales: {\n      cutout: '100%'\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: '1500px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Doughnut, {\n      options: options,\n      data: v9chart\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" CO2 emissions by country\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"https://ourworldindata.org/uploads/2020/09/Global-GHG-Emissions-by-sector-based-on-WRI-2020.xlsx\",\n      children: \"Dataset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"https://ourworldindata.org/emissions-by-sector#co2-emissions-by-secto\",\n      children: \"More info\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n_s(V9, \"isT3zcR6sFvWGzcY2qYjcSu26Pg=\");\n_c = V9;\nvar _c;\n$RefreshReg$(_c, \"V9\");","map":{"version":3,"names":["React","axios","useEffect","useState","Bar","Line","Doughnut","parse","Chart","ChartJS","urlv9","V9","v9","setv9","get","then","response","console","log","data","catch","error","alert","v9chart","labels","map","d","name","datasets","label","backgroundColor","borderColor","borderWidth","values","parsing","yAxisKey","spanGaps","options","type","responsive","plugins","legend","position","title","display","text","scales","cutout","maxWidth"],"sources":["C:/wepabbi/webappi/webappui/src/charts/V9.js"],"sourcesContent":["import React from 'react'\r\nimport axios from 'axios';\r\nimport { useEffect,useState } from 'react';\r\nimport {Bar,Line,Doughnut} from \"react-chartjs-2\";\r\nimport { parse } from 'papaparse';\r\nimport 'chartjs-adapter-luxon';\r\nimport{Chart as ChartJS} from \"chart.js/auto\"\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst urlv9 = 'http://localhost:8080/v9'\r\n\r\n\r\n\r\n\r\n\r\nexport default function V9() {\r\n\r\n\r\n  const [v9, setv9] = useState([])\r\n\r\n  useEffect(() => {\r\n    axios.get(urlv9)\r\n      .then((response) => {\r\n        console.log(response.data)\r\n        setv9(response.data)\r\n      }).catch(error => {\r\n        alert(error.response.error)\r\n      })\r\n  }, [])\r\n\r\n\r\n \r\n  const v9chart = {\r\n    labels: v9.map(d => d.name),\r\n    datasets: [\r\n      {\r\n\r\n        label: 'V9',\r\n        backgroundColor: [\r\n            'rgba(255, 99, 132, 0.2)',\r\n            'rgba(54, 162, 235, 0.2)',\r\n            'rgba(255, 206, 86, 0.2)',\r\n            'rgba(75, 192, 192, 0.2)',\r\n            'rgba(153, 102, 255, 0.2)',\r\n            'rgba(255, 159, 64, 0.2)',\r\n\r\n          ],\r\n          borderColor: [\r\n            'rgba(255, 99, 132, 1)',\r\n            'rgba(54, 162, 235, 1)',\r\n            'rgba(255, 206, 86, 1)',\r\n            'rgba(75, 192, 192, 1)',\r\n            'rgba(153, 102, 255, 1)',\r\n            'rgba(255, 159, 64, 1)',\r\n            'rgba(255, 159, 64, 0.2)',\r\n          ],\r\n        borderWidth: 2,\r\n        data: v9.map(d => d.values),\r\n        parsing: {\r\n            yAxisKey: 'values', \r\n          },\r\n        spanGaps: false,\r\n\r\n      }\r\n    ]\r\n  }\r\n  const options = {\r\n    type:'line',\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: \"top\",\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: \"V9\",\r\n      },\r\n    },\r\n    scales: {\r\n        cutout: '100%'\r\n      \r\n    } ,\r\n  }\r\n  return (\r\n    <div style={{maxWidth:'1500px'}}>\r\n      <Doughnut options={options}  data={v9chart} />\r\n      <p> CO2 emissions by country</p>\r\n      <a href=\"https://ourworldindata.org/uploads/2020/09/Global-GHG-Emissions-by-sector-based-on-WRI-2020.xlsx\">Dataset</a>\r\n      <a href=\"https://ourworldindata.org/emissions-by-sector#co2-emissions-by-secto\">More info</a>\r\n\r\n    </div>\r\n  )\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAACC,QAAQ,QAAQ,OAAO;AAC1C,SAAQC,GAAG,EAACC,IAAI,EAACC,QAAQ,QAAO,iBAAiB;AACjD,SAASC,KAAK,QAAQ,WAAW;AACjC,OAAO,uBAAuB;AAC9B,SAAOC,KAAK,IAAIC,OAAO,QAAO,eAAe;AAAA;AAO7C,MAAMC,KAAK,GAAG,0BAA0B;AAMxC,eAAe,SAASC,EAAE,GAAG;EAAA;EAG3B,MAAM,CAACC,EAAE,EAAEC,KAAK,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEhCD,SAAS,CAAC,MAAM;IACdD,KAAK,CAACa,GAAG,CAACJ,KAAK,CAAC,CACbK,IAAI,CAAEC,QAAQ,IAAK;MAClBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACG,IAAI,CAAC;MAC1BN,KAAK,CAACG,QAAQ,CAACG,IAAI,CAAC;IACtB,CAAC,CAAC,CAACC,KAAK,CAACC,KAAK,IAAI;MAChBC,KAAK,CAACD,KAAK,CAACL,QAAQ,CAACK,KAAK,CAAC;IAC7B,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAIN,MAAME,OAAO,GAAG;IACdC,MAAM,EAAEZ,EAAE,CAACa,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,CAAC;IAC3BC,QAAQ,EAAE,CACR;MAEEC,KAAK,EAAE,IAAI;MACXC,eAAe,EAAE,CACb,yBAAyB,EACzB,yBAAyB,EACzB,yBAAyB,EACzB,yBAAyB,EACzB,0BAA0B,EAC1B,yBAAyB,CAE1B;MACDC,WAAW,EAAE,CACX,uBAAuB,EACvB,uBAAuB,EACvB,uBAAuB,EACvB,uBAAuB,EACvB,wBAAwB,EACxB,uBAAuB,EACvB,yBAAyB,CAC1B;MACHC,WAAW,EAAE,CAAC;MACdb,IAAI,EAAEP,EAAE,CAACa,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACO,MAAM,CAAC;MAC3BC,OAAO,EAAE;QACLC,QAAQ,EAAE;MACZ,CAAC;MACHC,QAAQ,EAAE;IAEZ,CAAC;EAEL,CAAC;EACD,MAAMC,OAAO,GAAG;IACdC,IAAI,EAAC,MAAM;IACXC,UAAU,EAAE,IAAI;IAChBC,OAAO,EAAE;MACPC,MAAM,EAAE;QACNC,QAAQ,EAAE;MACZ,CAAC;MACDC,KAAK,EAAE;QACLC,OAAO,EAAE,IAAI;QACbC,IAAI,EAAE;MACR;IACF,CAAC;IACDC,MAAM,EAAE;MACJC,MAAM,EAAE;IAEZ;EACF,CAAC;EACD,oBACE;IAAK,KAAK,EAAE;MAACC,QAAQ,EAAC;IAAQ,CAAE;IAAA,wBAC9B,QAAC,QAAQ;MAAC,OAAO,EAAEX,OAAQ;MAAE,IAAI,EAAEd;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAG,eAC9C;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAgC,eAChC;MAAG,IAAI,EAAC,kGAAkG;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAY,eACtH;MAAG,IAAI,EAAC,uEAAuE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAc;EAAA;IAAA;IAAA;IAAA;EAAA,QAEzF;AAEV;AAAC,GA7EuBZ,EAAE;AAAA,KAAFA,EAAE;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}